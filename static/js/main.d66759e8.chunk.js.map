{"version":3,"sources":["img/PANTO.png","img/logimg.svg","Screen/LoginScreen/LoginScreen.js","config.js","Screen/AdminScreen/AdminScreen.js","Screen/SalesScreen/SalesScreen.js","component/navigater.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LoginScreen","props","handleAdmin","state","userName","password","history","push","alert","e","message","handleSales","console","log","className","style","height","backgroundColor","borderRadius","src","require","alt","width","fontSize","Form","type","placeholder","value","this","onChange","event","setState","target","Button","variant","marginTop","onClick","bind","borderTopRightRadius","borderBottomRightRadius","React","Component","fire","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AdminScreen","SignOut","values","isLoading","columns","title","field","headerFilter","database","ref","on","snapshot","list","forEach","snap","val","color","data","tooltips","layout","child","SalesScreen","handleCSV","setTimeout","remove","csv","label","key","headers","filename","Navigator","basename","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d66759e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PANTO.2d18a2c8.png\";","module.exports = __webpack_public_path__ + \"static/media/logimg.eec0ddf7.svg\";","import React from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\n\r\nclass LoginScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n  handleAdmin = () =>{\r\n    try{\r\n      if(this.state.userName === \"admin@gmail.com\" && this.state.password === \"admin123\"){\r\n        this.props.history.push('/Admin');\r\n      }else{\r\n        alert(\"invalid user\");\r\n      }\r\n    } catch(e){\r\n      alert(e.message);\r\n    }\r\n  }\r\n\r\n  handleSales = () =>{\r\n    try{\r\n      if(this.state.userName === \"sales@gmail.com\" && this.state.password === \"sales123\"){\r\n        this.props.history.push('/Sales');\r\n      }else{\r\n        alert(\"invalid user\");\r\n      }\r\n    } catch(e){\r\n      console.log(e.message);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"col-12 d-flex justify-content-center align-items-center\"\r\n        style={{ height: \"100vh\", backgroundColor: \"#7a97ff\" }}\r\n      >\r\n        <div\r\n          className=\"col-10 shadow-lg d-flex flex-row p-0\"\r\n          style={{ height: \"80vh\", borderRadius: 7, backgroundColor: \"white\" }}\r\n        >\r\n          <div className=\"col-6 d-flex flex-column justify-content-center align-items-center\">\r\n            <div className=\"d-flex flex-row justify-content-center align-items-center\">\r\n              <img\r\n                src={require(\"../../img/PANTO.png\")}\r\n                alt=\"\"\r\n                style={{ width: \"5vh\" }}\r\n              ></img>\r\n              <span className=\"font-weight-bold\">Pando</span>\r\n            </div>\r\n            <span className=\"font-weight-bold\" style={{ fontSize: 30 }}>\r\n              Welcome Back\r\n            </span>\r\n            <Form className=\"d-flex flex-column justify-content-center align-items-center\">\r\n              <div className=\"d-flex flex-column align-items-start justify-content-center mb-3\">\r\n                <span\r\n                  className=\"font-weight-bold mb-1\"\r\n                  style={{ fontSize: 13 }}\r\n                >\r\n                  Email\r\n                </span>\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  style={{ width: \"50vh\", height: 30, fontSize: 12 }}\r\n                  value={this.state.userName}\r\n                  onChange={(event) =>\r\n                    this.setState({ userName: event.target.value })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"d-flex flex-column align-items-start justify-content-center\">\r\n                <span\r\n                  className=\"font-weight-bold mb-1\"\r\n                  style={{ fontSize: 13 }}\r\n                >\r\n                  Password\r\n                </span>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  style={{ width: \"50vh\", height: 30, fontSize: 12 }}\r\n                  value={this.state.password}\r\n                  onChange={(event) =>\r\n                    this.setState({ password: event.target.value })\r\n                  }\r\n                />\r\n              </div>\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n                style={{ width: \"50vh\", marginTop: 15 }}\r\n                onClick={this.handleAdmin.bind(this)}\r\n              >\r\n                Login as Admin\r\n              </Button>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                style={{\r\n                  width: \"50vh\",\r\n                  marginTop: 15,\r\n                  backgroundColor: \"#7a97ff\",\r\n                }}\r\n                onClick={this.handleSales.bind(this)}\r\n              >\r\n                Login as Sales\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n          <div\r\n            className=\"col-6 d-flex justify-content-center align-items-center\"\r\n            style={{\r\n              backgroundColor: \"#eaeefa\",\r\n              borderTopRightRadius: 7,\r\n              borderBottomRightRadius: 7,\r\n            }}\r\n          >\r\n            <img\r\n              alt=\"\"\r\n              src={require(\"../../img/logimg.svg\")}\r\n              style={{ width: \"24vw\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default LoginScreen;\r\n","import * as firebase from 'firebase';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyBRl6LycdASl0gVSo_vJVsYHPGiPhyW7LE\",\r\n    authDomain: \"peer-to-peer-3d805.firebaseapp.com\",\r\n    databaseURL: \"https://peer-to-peer-3d805.firebaseio.com\",\r\n    projectId: \"peer-to-peer-3d805\",\r\n    storageBucket: \"peer-to-peer-3d805.appspot.com\",\r\n    messagingSenderId: \"1085409381511\",\r\n    appId: \"1:1085409381511:web:0dbc0196e335b61578fc22\",\r\n    measurementId: \"G-5EN2QGW5TT\"\r\n};\r\nvar fire = firebase.initializeApp(config);\r\nexport default fire;","import React from \"react\";\r\nimport firebase from \"../../config\";\r\n// import 'react-tabulator/lib/styles.css';\r\nimport { ReactTabulator } from \"react-tabulator\";\r\n// import { CSVLink } from \"react-csv\";\r\n\r\nclass AdminScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      values: [],\r\n      isLoading: false,\r\n      columns: [\r\n        { title: \"ID\", field: \"id\", width: 100},\r\n        { title: \"Email\", field: \"Email\",headerFilter: \"input\"},\r\n        { title: \"First Name\", field: \"FirstName\", },\r\n        { title: \"Last Name\", field: \"LastName\", },\r\n        { title: \"Phone\", field: \"Phone\", },\r\n        { title: \"Total Revenue\", field: \"totalMoney\", },\r\n        { title: \"Revenue\", field: \"payMoney\", },\r\n        { title: \"Wallet\", field: \"wallMoney\", }\r\n      ],\r\n      // csv: [\r\n      //   { label: \"ID\", key: \"id\"},\r\n      //   { label: \"Email\", key: \"Email\"},\r\n      //   { label: \"First Name\", key: \"FirstName\" },\r\n      //   { label: \"Last Name\", key: \"LastName\" },\r\n      //   { label: \"Phone\", key: \"Phone\" },\r\n      //   { label: \"Total Revenue\", key: \"totalMoney\"},\r\n      //   { label: \"Revenue\", key: \"payMoney\" },\r\n      //   { label: \"Wallet\", key: \"wallMoney\" }\r\n      // ]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    firebase.database().ref('users').on('value', snapshot =>{\r\n        let list =[];\r\n        snapshot.forEach(snap =>{\r\n            list.push(snap.val());\r\n        });\r\n        console.log(list);\r\n        this.setState({values: list});\r\n    })\r\n  }\r\n\r\n  SignOut = () =>{\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"d-flex col-12 bg-primary flex-row justify-content-between align-items-center\" style={{height:'10vh'}}>\r\n          <div>\r\n            <span className=\"font-weight-bolder\" style={{color:'white'}}>Pando Dashboard</span>\r\n          </div>\r\n          <div type=\"button\" onClick={()=>{this.SignOut()}}>\r\n            <span className=\"font-weight-bolder\" style={{color:'white'}}>Sign Out</span>\r\n          </div>\r\n        </div>\r\n        <ReactTabulator\r\n          data={this.state.values}\r\n          columns={this.state.columns}\r\n          tooltips={true}\r\n          layout={\"fitData\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AdminScreen;\r\n","import React from 'react';\r\nimport firebase from \"../../config\";\r\nimport { CSVLink } from \"react-csv\";\r\n// import 'react-tabulator/lib/styles.css';\r\nimport { React15Tabulator } from \"react-tabulator\";\r\n\r\nvar fire = firebase.database().ref('Payout').child('Details');\r\nclass SalesScreen extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            values: [],\r\n            isLoading: false,\r\n            columns: [\r\n              { title: \"RazorpayX Account Number\", field: \"RazorpayX_Account_Number\"},\r\n              { title: \"Payout_Amount\", field: \"Payout_Amount\"},\r\n              { title: \"Payout Currency\", field: \"Payout_Currency\" },\r\n              { title: \"Payout Mode\", field: \"Payout_Mode\" },\r\n              { title: \"Payout Purpose\", field: \"Payout_Purpose\" },\r\n              { title: \"Payout Narration\", field: \"Payout_Narration\" },\r\n              { title: \"Payout Reference Id\", field: \"Payout_Reference_Id\" },\r\n              { title: \"Fund Account Id\", field: \"Fund_Account_Id\" },\r\n              { title: \"Fund Account Type\", field: \"Fund_Account_Type\" },\r\n              { title: \"Fund Account Name\", field: \"Fund_Account_Name\" },\r\n              { title: \"Fund Account Ifsc\", field: \"Fund_Account_Ifsc\" },\r\n              { title: \"Fund Account Number\", field: \"Fund_Account_Number\" },\r\n              { title: \"Fund Account Vpa\", field: \"Fund_Account_Vpa\" },\r\n              { title: \"Contact Type\", field: \"Contact_Type\" },\r\n              { title: \"Contact Name\", field: \"Contact_Name\" },\r\n              { title: \"Contact Email\", field: \"Contact_Email\" },\r\n              { title: \"Contact Mobile\", field: \"Contact_Mobile\" },\r\n              { title: \"Contact Reference Id\", field: \"Contact_Reference_Id\" },\r\n              { title: \"notes place\", field: \"notes_place\" },\r\n              { title: \"notes code\", field: \"notes_code\" },\r\n            ],\r\n            csv: [\r\n                { label: \"RazorpayX Account Number\", key: \"RazorpayX_Account_Number\"},\r\n                { label: \"Payout_Amount\", key: \"Payout_Amount\"},\r\n                { label: \"Payout Currency\", key: \"Payout_Currency\" },\r\n                { label: \"Payout Mode\", key: \"Payout_Mode\" },\r\n                { label: \"Payout Purpose\", key: \"Payout_Purpose\" },\r\n                { label: \"Payout Narration\", key: \"Payout_Narration\" },\r\n                { label: \"Payout Reference Id\", key: \"Payout_Reference_Id\" },\r\n                { label: \"Fund Account Id\", key: \"Fund_Account_Id\" },\r\n                { label: \"Fund Account Type\", key: \"Fund_Account_Type\" },\r\n                { label: \"Fund Account Name\", key: \"Fund_Account_Name\" },\r\n                { label: \"Fund Account Ifsc\", key: \"Fund_Account_Ifsc\" },\r\n                { label: \"Fund Account Number\", key: \"Fund_Account_Number\" },\r\n                { label: \"Fund Account Vpa\", key: \"Fund_Account_Vpa\" },\r\n                { label: \"Contact Type\", key: \"Contact_Type\" },\r\n                { label: \"Contact Name\", key: \"Contact_Name\" },\r\n                { label: \"Contact Email\", key: \"Contact_Email\" },\r\n                { label: \"Contact Mobile\", key: \"Contact_Mobile\" },\r\n                { label: \"Contact Reference Id\", key: \"Contact_Reference_Id\" },\r\n                { label: \"notes place\", key: \"notes_place\" },\r\n                { label: \"notes code\", key: \"notes_code\" },\r\n              ],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fire.on('value', snapshot =>{\r\n            let list =[];\r\n            snapshot.forEach(snap =>{\r\n                list.push(snap.val());\r\n            });\r\n            console.log(list);\r\n            this.setState({values: list});\r\n        })\r\n      }\r\n      handleCSV = () =>{\r\n        setTimeout(() => {\r\n            fire.remove();\r\n          }, 2000);\r\n      }\r\n\r\n    SignOut = () =>{\r\n        this.props.history.push('/');\r\n      }\r\n    render(){\r\n        return(\r\n            <div className=\"d-flex justify-content-center align-items-center flex-column\">\r\n                <div className=\"d-flex col-12 bg-primary flex-row justify-content-between align-items-center p-3\">\r\n                    <div>\r\n                        <span className=\"font-weight-bolder\" style={{color:'white'}}>Pando Dashboard</span>\r\n                    </div>\r\n                    <div type=\"button\" onClick={()=>{this.SignOut()}}>\r\n                        <span className=\"font-weight-bolder\" style={{color:'white'}}>Sign Out</span>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"col-12 d-flex justify-content-end m-2\">\r\n                <CSVLink data={this.state.values} headers={this.state.csv} filename={\"payment.csv\"} className=\"btn btn-primary\" onClick={()=>this.handleCSV()}>\r\n                    Download CSV\r\n                </CSVLink>\r\n                </div>\r\n                <div className=\"d-flex col-12 bg-primary p-0 m-0\">\r\n                    <React15Tabulator\r\n                    data={this.state.values}\r\n                    columns={this.state.columns}\r\n                    tooltips={true}\r\n                    layout={\"fitColumns\"}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SalesScreen;","import React from \"react\";\r\nimport LoginScreen from \"../Screen/LoginScreen/LoginScreen\";\r\nimport AdminScreen from \"../Screen/AdminScreen/AdminScreen\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport SalesScreen from \"../Screen/SalesScreen/SalesScreen\";\r\n\r\n\r\nfunction Navigator() {\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <Route path=\"/\" exact component={LoginScreen}/>\r\n      <Route path=\"/Admin\" component={AdminScreen}/>\r\n      <Route path=\"/Sales\"component={SalesScreen}/>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default Navigator;\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"tabulator-tables/dist/css/tabulator.min.css\";\nimport Navigator from \"./component/navigater\";\n\n\nfunction App() {\n  return (\n    <>\n      <Navigator></Navigator>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}